

PASOS PARA CREACIÓN DE UN PLUGIN ANDROID CON PHONEGAP
1:
- Creación de una carpeta con el nombre del plugin: Ej: plugin-example
- Creación de una carpeta www dentro de la carpeta anterior.
- Crear el archivo por ejemplo SendMail.js con la llamada al código nativo:
	var sendmail = {  
  
  send: function(successCallback, errorCallback, subject, body, sender, password, recipients){  
    cordova.exec(successCallback,  
        errorCallback,  
        "SendMail",  
        "send",  
        [{  
          "subject":subject,   
            "body":body,  
            "sender":sender,  
            "password":password,   
            "recipients":recipients  
        }]  
    );  
      
  }  
}  
  
module.exports = sendmail; 

2.
- Dentro de la carpeta plugin-example crear una carpeta src
- dentro otra llamada android
- dentro el fichero en Java con el codigo SendMail.java
package com.autentia.plugin.sendmail;  
  
import org.apache.cordova.CallbackContext;  
import org.apache.cordova.CordovaPlugin;  
import org.json.JSONArray;  
import org.json.JSONException;  
import org.json.JSONObject;  
  
public class SendMail extends CordovaPlugin {  
  
  public static final String ACTION_SEND = "send";  
  
  public boolean execute(String action, JSONArray jsonArgs,  
      CallbackContext callbackContext) throws JSONException {  
    try {  
      if (ACTION_SEND.equals(action)) {  
        JSONObject args = jsonArgs.getJSONObject(0);  
        String subject = args.getString("subject");  
        String body = args.getString("body");  
        String sender = args.getString("sender");  
        String password = args.getString("password");  
        String recipients = args.getString("recipients");  
  
        GMailSender gmailSender = new GMailSender(  
            sender, password);  
  
        gmailSender.sendMail(subject, body, sender, recipients);  
  
      }  
      callbackContext.success();  
      return true;  
    } catch (Exception e) {  
      callbackContext.error(e.getMessage());  
      return false;  
    }  
  }  
}  